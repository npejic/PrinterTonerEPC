@model PrinterToner.Models.Servis

@{
    ViewBag.Title = "Create";
}



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Unos nove servisne radnje</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ServisDate, "Datum", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServisDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServisDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServisPrice, "Cena", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServisPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServisPrice, "", new { @class = "text-danger" })
            </div>
        </div>
       
         @*TODO:izmena*@
        @*<div class="form-group">
            @Html.LabelFor(model => model.OwnerID, "Firma", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("OwnerID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OwnerID, "", new { @class = "text-danger" })
            </div>
        </div>*@
       
        @Html.DropDownList("Firma", ViewBag.OwnerID as SelectList, "Izaberi firmu", htmlAttributes: new { onchange = "GetPrinter()" })

        @Html.DropDownList("Štampač", ViewBag.Printers as SelectList, "Izaberi štampač", new { @class = "inputBox", @id = "DropDownListStates" })

         @*TODO:izmena*@
        @*<div class="form-group">
            @Html.LabelFor(model => model.PrinterID, "Serijski broj", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PrinterID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PrinterID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Napomena, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Napomena, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Napomena, "", new { @class = "text-danger" })
            </div>
        </div>

       
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Sačuvaj" class="btn btn-default" />
            </div>
        </div>
    </div>
}





<div>
    @Html.ActionLink("Povratak", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>

    function GetPrinter() {

        $.ajax({
            url: "@Url.Action("GetJsonState")",
            dataType: "json",
            type: "GET",
            data:{id:$("#Owner").val()},
            error: function () {
            },
            beforeSend: function () {
            },
            success: function (data) {
                var items = "";
                items = "<option value=''>Choose State</option>";
                $.each(data, function (i, item) {
                    items += "<option value=\"" + item.Value + "\">" + item.Text + "</option>";
                });
                $("#DropDownListStates").html(items);
            }
        });

    }
</script>  
}
